apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appName }}
  labels:
    app: {{ .Values.appName }}
    log_type: {{ .Values.log_type }}
spec:
  minReadySeconds: 60
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  replicas: {{ .Values.minReplicas }}
  selector:
    matchLabels:
      app: {{ .Values.appName }}
  template:
    metadata:
      labels:
        app: {{ .Values.appName }}
        log_type: {{ .Values.log_type }}
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: project/name
                    operator: In
                    values:
                      - roboshop
      topologySpreadConstraints:
        - topologyKey: kubernetes.io/hostname
          maxSkew: 1
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app: {{ .Values.appName }}
      containers:
        - name: {{ .Values.appName }}
          image: devopshop.azurecr.io/roboshop-{{ .Values.appName }}:{{ .Values.appTag }}
          ports:
            - containerPort: {{ .Values.containerPort }}
          livenessProbe:
            httpGet:
              path: {{ .Values.probes.liveness.path | default "/health" }}
              port: {{ .Values.probes.liveness.port | default 8080 }}
            initialDelaySeconds: {{ .Values.probes.liveness.initialDelaySeconds | default 10 }}
            periodSeconds: {{ .Values.probes.liveness.periodSeconds | default 5 }}
            failureThreshold: {{ .Values.probes.liveness.failureThreshold | default 3 }}
            readinessProbe:
              httpGet:
                path: {{ .Values.probes.readiness.path | default "/health" }}
                port: {{ .Values.probes.readiness.port | default 8080 }}
              initialDelaySeconds: { { .Values.probes.readiness.initialDelaySeconds | default 5 }}
              periodSeconds: { { .Values.probes.readiness.periodSeconds | default 5 }}
              failureThreshold: { { .Values.probes.readiness.failureThreshold | default 3 }}
          envFrom:
            - secretRef:
                name: {{ .Values.appName }}
          resources:
            requests:
              memory: {{ .Values.resources.requests.memory | quote }}
              cpu: {{ .Values.resources.requests.cpu | quote }}
            limits:
              memory: {{ .Values.resources.limits.memory | quote }}
              cpu: {{ .Values.resources.limits.cpu | quote }}






